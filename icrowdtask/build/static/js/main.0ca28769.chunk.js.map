{"version":3,"sources":["header.js","tasklist.js","app.js","index.js"],"names":["Header","props","useState","username","setUsername","useEffect","user","firstname","lastname","logoutComponent","NavDropdown","Divider","Item","href","onClick","logout","Navbar","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","title","loggedin","TaskList","App","setLoggedin","setUser","loading","setLoading","fetch","credentials","then","response","console","error","status","json","catch","err","finally","method","res","window","location","origin","requireAuth","nextState","replace","next","log","exact","path","component","onEnter","ReactDOM","render","document","getElementById"],"mappings":"wOAiDeA,EA3CA,SAACC,GAAW,IAAD,EACQC,mBAAS,WADjB,mBACjBC,EADiB,KACPC,EADO,KASxBC,qBANgB,WACVJ,EAAMK,MAAQL,EAAMK,KAAKC,WAC3BH,EAAY,GAAD,OAAIH,EAAMK,KAAKC,UAAf,YAA4BN,EAAMK,KAAKE,aAInC,CAACP,IAEpB,IAAMQ,EACJ,oCACE,kBAACC,EAAA,EAAYC,QAAb,MACA,kBAACD,EAAA,EAAYE,KAAb,CAAkBC,KAAK,aAAaC,QAASb,EAAMc,QAAnD,WAIJ,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,SACzB,kBAACF,EAAA,EAAOG,MAAR,CAAcN,KAAK,SAAnB,cACA,kBAACG,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUb,KAAK,SAAf,SACA,kBAACW,EAAA,EAAIE,KAAL,CAAUb,KAAK,aAAf,kBAEF,kBAACH,EAAA,EAAD,CAAaiB,MAAOxB,EAAUoB,GAAG,sBAC/B,kBAACb,EAAA,EAAYE,KAAb,CAAkBC,KAAK,KAAvB,eACCZ,EAAM2B,UACLnB,MC1BGoB,EARE,WACf,OACE,oCACE,gECwESC,EApEH,WAAO,IAAD,EACgB5B,oBAAS,GADzB,mBACT0B,EADS,KACCG,EADD,OAEQ7B,mBAAS,MAFjB,mBAETI,EAFS,KAEH0B,EAFG,OAGc9B,oBAAS,GAHvB,mBAGT+B,EAHS,KAGAC,EAHA,KAwBhB7B,qBAnBkB,WAEhB8B,MADS,aACE,CACTC,YAAa,YACZC,MAAK,SAACC,GAEP,GADAC,QAAQC,MAAMF,GACU,MAApBA,EAASG,OACR,OAAOH,EAASI,OADQ3B,OAE5BsB,MAAK,SAAC/B,GACPiC,QAAQC,MAAMlC,GACVA,IACFyB,GAAY,GACZC,EAAQ1B,OAETqC,OAAM,SAACC,GACRL,QAAQC,MAAMI,MACbC,SAAQ,kBAAMX,GAAW,QAGT,IAErB,IAAMnB,EAAS,WACbgB,GAAY,GACZI,MAAM,eAAgB,CAACW,OAAQ,OAAQV,YAAa,YACnDC,MAAK,SAACU,GACLC,OAAOC,SAASpC,KAAhB,UAA0BmC,OAAOC,SAASC,OAA1C,qBAUJ7C,qBANsB,WACpB,IAAK4B,IAAYL,EACf,OAAOb,MAIc,CAACkB,IAE1B,IAAMkB,EAAc,SAACC,EAAWC,EAASC,GACvCf,QAAQgB,IAAIH,GACZb,QAAQgB,IAAIF,GAQZC,KAGF,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQ1B,SAAUA,EAAUb,OAAQA,EAAQT,KAAMA,IAClD,yBAAKmB,UAAU,WACb,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,IAAIC,UAAW7B,EAAU8B,QAASR,IACpD,kBAAC,IAAD,CAAOM,KAAK,QAAQC,UAAW7B,EAAU8B,QAASR,Q,MC/D5DS,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.0ca28769.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\n\nconst Header = (props) => {\n  const [username, setUsername] = useState('Account')\n\n  const setUser = () => {\n    if (props.user && props.user.firstname) {\n      setUsername(`${props.user.firstname} ${props.user.lastname}`)\n    }\n  }\n\n  useEffect(setUser, [props])\n\n  const logoutComponent = (\n    <>\n      <NavDropdown.Divider />\n      <NavDropdown.Item href=\"/loggedout\" onClick={props.logout} >Logout</NavDropdown.Item>\n    </>\n  )\n\n  return (\n    <Navbar bg=\"light\" variant=\"light\">\n      <Navbar.Brand href=\"#home\">iCrowdTask</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Tasks</Nav.Link>\n          <Nav.Link href=\"#features\">Find a Helper</Nav.Link>\n        </Nav>\n        <NavDropdown title={username} id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href=\"/\">Preferences</NavDropdown.Item>\n          {props.loggedin &&\n            logoutComponent}\n        </NavDropdown>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nHeader.propTypes = {\n  loggedin: PropTypes.bool,\n  logout: PropTypes.func,\n  user: PropTypes.any\n}\n\nexport default Header\n","import React from 'react'\n\nconst TaskList = () => {\n  return (\n    <>\n      <h1>These are the available tasks.</h1>\n    </>\n  )\n}\n\nexport default TaskList\n","import React, { useState, useEffect } from 'react'\nimport {\n  Route,\n  HashRouter\n} from 'react-router-dom'\nimport Header from './header'\nimport TaskList from './tasklist'\n\n\nconst App = () => {\n  const [loggedin, setLoggedin] = useState(false)\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  const fetchUser = () => {\n    const url = `/api/user/`\n    fetch(url, {\n      credentials: 'include'\n    }).then((response) => {\n      console.error(response)\n      if (response.status !== 200) logout()\n      else return response.json()\n    }).then((user) => {\n      console.error(user)\n      if (user) {\n        setLoggedin(true)\n        setUser(user)\n      }\n    }).catch((err) => {\n      console.error(err)\n    }).finally(() => setLoading(false))\n  }\n\n  useEffect(fetchUser, [])\n\n  const logout = () => {\n    setLoggedin(false)\n    fetch('/api/logout/', {method: 'POST', credentials: 'include'})\n    .then((res) => {\n      window.location.href = `${window.location.origin}/api/reqlogin`\n    })\n  }\n\n  const checkLoggedIn = () => {\n    if (!loading && !loggedin) {\n      return logout()\n    }\n  }\n\n  useEffect(checkLoggedIn, [loading])\n\n  const requireAuth = (nextState, replace, next) => {\n    console.log(nextState)\n    console.log(replace)\n    debugger\n    if (!true) {\n      replace({\n        pathname: \"/api/login\",\n        state: {nextPathname: nextState.location.pathname}\n      })\n    }\n    next()\n  }\n\n  return (\n    <>\n      <HashRouter>\n        <Header loggedin={loggedin} logout={logout} user={user} />\n        <div className=\"content\">\n          <Route exact path=\"/\" component={TaskList} onEnter={requireAuth} />\n          <Route path=\"/home\" component={TaskList} onEnter={requireAuth} />\n        </div>\n      </HashRouter>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// Create the entry point for the one pge app elements.\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}